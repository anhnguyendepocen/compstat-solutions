interval
  t(cbind(bst.ci.1$basic[c(4,5)],bst.ci.2$basic[c(4,5)],bst.ci.3$basic[c(4,5)]))

builtin.normal
indices

> dim(indices)
dim(indices)
builtin.normal
boot.normal
boot.rt
boot.exp
y <- y.normal
betas
dat
y <- t(y.normal)
betas
exp
dim(betas)
exp
dim(betas)
quantiles
quantiles
interval
builtin.normal
numeric(5)
precict(y~.,data=set)
predict(y~.,data=set)
lm(y~.,data=set)
predict(lm(y~.,data=set))
predict(lm(y~.,data-set))-y
y
help(lm)
a <- lm(y~.,data=set)
a$fitted.values
fitted(A)
fitted(a)
fitted(a)-y
sum(fitted(a)-y)
mean(abs(fitted(a)-y))
fitted(a)-y
  bst.sample <- boot(data=dat,statistic=coefs,R=B)

  bst.sample <- boot(data=dat,statistic=coefs,R=B)

bst.sample <- boot(data=dat,statistic=coefs,R=10)
bst.sampel
bst.sample
help(boot)
mean(bst.sample
bst.sample$t
betas.sol
bst.sample$t %*% t(X)
betas.sol %*% t(X[1,])
X[1,]
bst.sample$t %*% t(X[1,])
dim(bst.sample$t)
dim(X)
betas.sol %*% t(X)[1,]
dim(t(X))
dim(betas.sol)
bst.sample$t %*% t(X)
dim(bst.sample$t %*% t(X))
mean(abs(y - fitted(lm(y ~ ., data = set))))
rep(2,100)
dat <- data.frame(y.normal,x2,x3)
dat
betas.normal
dim(betas.normal

> dim(betas.normal)
dim(betas.normal)
dim(t(X))
dim(yvals.normal)
abs(y.normal-t(yvals.normal))
dim(y.normal)
dim(t(yvals.normal))
dim(abs(y.normal-t(yvals.normal))
)
dim(abs(y.normal-yvals.normal))
dim(y.normal)
dim(yvals.normal)
dim(rep(y.normal,1000))
rep(c(1,2,3),10)
matrix(
matrix(y.normal,1,1)
matrix
dim(y.normal)
matrix(y.normal,10,10)
a <- c(1,2,3)
b <- rep(a,10)
b
matrix(b,3,10)
matrix(b,10,3)
dim(yvals.normal)
matrix(b,10)
b
help(matrix)
avg.boot
l1ge.normal
set
dim(set)
y.normal
s <- y.normal[1:length(y.normal)]
s
data.frame(s,x2,x3)
x2
x3
dim(data.frame(s,x2,x3))
for(j in 1:nosimul){
  y.normal <- base + rnorm(100)
  y.rt <- base + rt(100,df=3)
  y.exp <- base + rexp(100) - 1

  ## turn these things into vectors
  y.normal <- y.normal[1:length(y.normal)]
  y.rt <- y.rt[1:length(y.rt)]
  y.exp <- y.exp[1:length(y.exp)]
  ##classical confidence intervals
  y <- y.normal
  set <- data.frame(y,x2,x3)
  l1.normal[j] <- mean(abs(y- fitted(lm(y~.,data=set))))
  y <- y.rt
  set <- data.frame(y,x2,x3)
  l1.rt[j] <- mean(abs(y- fitted(lm(y~.,data=set))))
  y <- y.exp
  set <- data.frame(y,x2,x3)
  l1.exp[j] <- mean(abs(y- fitted(lm(y~.,data=set))))

  betas.normal <- boot.builtin.betas(y.normal)

  
  betas.rt <- boot.builtin.betas(y.rt)
  betas.exp <- boot.builtin.betas(y.exp)

  yvals.normal <- betas.normal %*% t(X)
  avg.boot <- apply(abs(matrix(rep(y.normal,B),n,B)-t(yvals.normal)),2,mean) ## average over the n elements
  l1ge.normal[j] <- mean(avg.boot) ## average over B bootstrap runs

  yvals.rt <- betas.rt %*% t(X)
  avg.boot <- apply(abs(matrix(rep(y.rt,B),n,B)-t(yvals.rt)),2,mean) ## average over the n elements
  l1ge.rt[j] <- mean(avg.boot) ## average over B bootstrap runs

  yvals.exp <- betas.exp %*% t(X)
  avg.boot <- apply(abs(matrix(rep(y.exp,B),n,B)-t(yvals.exp)),2,mean) ## average over the n elements
  l1ge.exp[j] <- mean(avg.boot) ## average over B bootstrap runs
}
quit()
n
