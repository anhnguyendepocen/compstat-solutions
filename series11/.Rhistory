vehicle
vehicle[1,]
tree
help(rpart)
vehicle$Class
help(cp)
help(printcp)
help(plotcp)
tree.pruned
tree.pruned$splits
residuals.rpart(tree)
?residuals.rpart
residuals(tree)
residuals(tree.pruned)
mis.tree
mis.prunedtree
help(boot)
help(boot)
library(boot)
help(boot)
boot.rpart
help(boot)
boot.rpart$t
bootstrap.ge
nrow(vehicle)
cv.lo
vehicle[i,"class"]
vehicle
vehicle[i,"class"] == van
vehicle[i,"class"] == "van"
vehicle[i,"class"] == "saab"
vehicle[i,"class"]
vehicle[846,"class"]
vehicle[i,"Class"]
class.pred
vehicle[i,"Class"] == class.pred
(vehicle[i,"Class"] == class.pred) -1
help(unique)
  class.pred <- predict(rpart(Class~.,data=dat,cp=0.019),newdata=vehicle[i,],type="class")

ind
sample(1:nrow(data),nrow(data))
help(sample)
sample(1:nrow(data),nrow(data),replace = TRUE)
nrow(data)
sample(1:nrow(vehicle),nrow(vehicle),replace = TRUE)
ind <-  sample(1:nrow(vehicle),nrow(vehicle),replace = TRUE)
data <- vehicle
help(sub)
help(subse)
help(subset)
unique(ind)
help(and)
exclusive
help(setdiff)
outof.ind
err
err
ind
ind <- 1:nrow(dat)
ind
data
data <- dat
yvals
plot(dat$x,yvals)
boot.std$
t
apply(boot.std$t,2,var)
ci
ci$basic
fit.spline$spar
confint.stdboot ## contains the confidence intervals from the standard bootstrap
var
help(boot)
?fitted.smooth.splne
boot.std <- boot(dat,statistic=bootspline,R=B)

help(fitted)
help(smooth.spline)
fit.spline
fit.spline$fit
fitted(fit.spline)
predict(fit.spline,x)
predict(fit.spline,x)$y-dat$y
help(smooth.spline)
predict(fit.spline,x)$y-fitted(fit.spline)
fitted(fit.spline)
predict(fit.spline,x)$y
quit()
n
